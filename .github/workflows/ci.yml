name: Tests
on: push

jobs:
  # Label of the container job
  container-job:

    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Docker Hub image that `container-job` executes in
    container: ubuntu:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 1s
          --health-timeout 1s
          --health-retries 30

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Python
        run: |
          apt-get update
          apt-get install -y python3 python3-pip wget
          python3 -m pip install --upgrade pip
          ln -s /bin/python3 /usr/local/bin/python

      - name: Download CPython Tests
        run: |
            export PYVERSION=$(python -c "import sys; sys.stdout.write(sys.version.split()[0])")
            wget --quiet https://github.com/python/cpython/archive/v${PYVERSION}.tar.gz
            tar -xf v${PYVERSION}.tar.gz -C /tmp
            cp -r /tmp/cpython-${PYVERSION}/Lib/test ~/cpython_tests

      - name: Install Package
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade .[all]

      - name: Run Tests
        # Runs a script that creates a Redis client, populates
        # the client with data, and retrieves data
        run: timeout 90s python -m pytest -vvv -k "FileLock or SocketLock or RedisLock"
        # Environment variable used by the `client.js` script to create a new Redis client.
        env:
          # The hostname used to communicate with the Redis service container
          REDIS_HOST: redis
          # The default Redis port
          REDIS_PORT: 6379
